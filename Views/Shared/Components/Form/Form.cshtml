@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AngularApplication
@model Form
@{
    ViewData["Title"] = "Регистрация пользователя";
}

 
@if (Model == null)
{
    <div class="alert alert-danger">Модель не задана</div>
}
else
{


    <!-- разметка -->
    <div ng-clock class="front-pane init"
         oninput="onFormInputEvent(event,this)"
         style="padding: 20px;">

        <h2>@Model.Title</h2>
        @if (string.IsNullOrEmpty(Model.Description) == false)
        {<div class="alert alert-danger">@Model.Description</div>}
        @if (string.IsNullOrEmpty(Model.Error) == false)
        {<div class="alert alert-danger">@Model.Error</div>}

        <form method="post">
            @foreach (var field in Model.FormFields)
            {
                <div class="form-group">
                    <label>@(field.GetProperty("Label"))</label>
                    <vc:form-field model="@((FormField)field)"></vc:form-field>
                </div>
            }
            <div>
                <span class="btn btn-primary">далее</span>
            </div>
        </form>


    </div>

    <!-- скрипт -->
    <script>
    if (!window['onFormInputEvent']) {
        function onFormInputEvent(event,form) {

            console.log(event.target.value);
            window['https']({
                url: '@(ViewUtils.GetControllerPath(ViewContext))',
                method: 'PUT',
                params: {
                    Source: 'view-@(Model.GetHashCode())',
                    Property: event.target.name.replace('Input',''),
                    Value:    event.target.value
                }
            }).then(console.log);
        }
    }

    if (!window['parse']) {
        window['parse'] = function (form) {
            const data = {};
            function handle(pnode) {
                if (pnode.name) {
                    data[pnode.name] = pnode.value;
                    if (pnode.name) {
                        data[pnode.name] = (pnode.type && pnode.type == 'checkbox') ? pnode.checked : pnode.value;

                    }
                }
                if (pnode.childNodes) {
                    for (let i = 0; i < pnode.childNodes.length; i++) {
                        handle(pnode.childNodes[i]);
                    }
                }
            }
            handle(form);
            return data;
        }
    }
    if (!window['parseForIds']) {
        window['parseForIds'] = function (form) {
            const data = {};
            function handle(pnode) {
                if (pnode.name) {
                    data[pnode.name] = pnode.id;
                }
                if (pnode.childNodes) {
                    for (let i = 0; i < pnode.childNodes.length; i++) {
                        handle(pnode.childNodes[i]);
                    }
                }
            }
            handle(form);
            return data;
        }
    }
    </script>


    <!-- 
    <input-controller id="@Model.GetHashCode()"
                      url="@(ViewUtils.GetControllerPath(ViewContext))">
    </input-controller>-->

}