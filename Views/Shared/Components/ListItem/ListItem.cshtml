@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AngularApplication
@model ListItem

@{ Dictionary<string, string> bindings = new Dictionary<string, string>();
    if (Model.Bindings == null || Model.Bindings.Count() == 0)
    {
        @*if (Model.DataSet == null)
        {
            <div class="alert alert-warning">
                Не определён набор данных
            </div>
        }
        else
        {
            bindings = new Dictionary<string, string>() {
                { "Title",Expressions.GetUniqTextExpreyssionFor(Model.DataSet.GetType())}
            };
        }*@

    }
    else
    {

        bindings = Model.Bindings;
        if (bindings.ContainsKey("Title") == false && Model.DataSet != null)
        {
            bindings["Title"] = Expressions.GetUniqTextExpressionFor(Model.DataSet.GetType());
        }
    } 
}
 
@if (Model.Selected)
{
<li class="list-group-item active"
    ng-controller="ListItemController"
    style="display: inline-flex; width: calc( 100% - 4px ); margin: 3px;"
    onclick="$app.$invoke.$method('@Model.GetContentPath()', 'Select',{})"
    ondblclick="alert(this.innerHTML)">
    @try
    {
        
        @if (AttrsUtils.HasInputImage(Model.DataSet.GetType()))
        {
            <md-button>
                <md-icon style="background-image: url('@(ObjectCompileExpExtensions.Expression.Interpolate(AttrsUtils.GetInputImageUrlExpression(), Model.DataSet))')"></md-icon>
            </md-button>
        }        
        else
        {            
            <i class="material-icons">folder</i>
        }
    }
    catch (System.Exception ex)
    {
        <p class="text-error">@ex.Message</p>
    }
    <text style="padding-left: 10px;">
        @if (bindings.ContainsKey("Title"))
        {
            @(ObjectCompileExpExtensions.Expression.Interpolate(bindings["Title"], Model.DataSet))
        }
        else
        {
            @Model.Title
        }
    </text>
</li>
}
else
{
<li class="list-group-item"
    ng-controller="ListItemController"
    style="display: inline-flex; width: calc( 100% - 4px ); margin: 3px;"
    onclick="$app.$invoke.$method('@Model.GetContentPath()', 'Select',{})"
    ondblclick="alert(this.innerHTML)">


    <div class="d-flex flex-row flex-nowrap" style="width: 100%;">
        <text style="padding-left: 10px; width: 100%; ">
            @if (bindings.ContainsKey("Title"))
            {
                @(ObjectCompileExpExtensions.Expression.Interpolate(bindings["Title"], Model.DataSet))
            }
            else
            {
                @Model.Title
            }
        </text>


        @try
        {
            @if (Model.DataSet!=null && AttrsUtils.HasInputImage(Model.DataSet.GetType()))
            {
                <md-button>
                    <md-icon style="background-image: url('@(ObjectCompileExpExtensions.Expression.Interpolate(AttrsUtils.GetInputImageUrlExpression(), Model.DataSet))')"></md-icon>
                </md-button>
            }
            else
            {
                <i class="material-icons" style="width: 50px; justify-self: flex-end;">folder</i>
            }
        }
        catch (System.Exception ex)
        {
            <p class="text-error">@ex.Message</p>
        }
    </div>
</li>
}


