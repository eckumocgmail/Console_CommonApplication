import { ClientConnection } from './data-model/client-connection.model';
import { FileCatalog } from './data-model/file-catalog.model';
import { FileResource } from './data-model/file-resource.model';
import { CLRLibrary } from './data-model/c-l-r-library.model';
import { Account } from './data-model/account.model';
import { Calendar } from './data-model/calendar.model';
import { Group } from './data-model/group.model';
import { LoginFact } from './data-model/login-fact.model';
import { Message } from './data-model/message.model';
import { News } from './data-model/news.model';
import { Person } from './data-model/person.model';
import { Resource } from './data-model/resource.model';
import { Role } from './data-model/role.model';
import { Settings } from './data-model/settings.model';
import { User } from './data-model/user.model';
import { UserGroups } from './data-model/user-groups.model';
import { WebApp } from './data-model/web-app.model';
import { BusinessDatasource } from './data-model/business-datasource.model';
import { BusinessFunction } from './data-model/business-function.model';
import { BusinessIndicator } from './data-model/business-indicator.model';
import { BusinessLogic } from './data-model/business-logic.model';
import { BusinessProcess } from './data-model/business-process.model';
import { BusinessReport } from './data-model/business-report.model';
import { BusinessResource } from './data-model/business-resource.model';
import { GroupMessage } from './data-model/group-message.model';
import { MessageAttribute } from './data-model/message-attribute.model';
import { MessageProperty } from './data-model/message-property.model';
import { MessageProtocol } from './data-model/message-protocol.model';
import { ValidationModel } from './data-model/validation-model.model';
import { BusinessDataset } from './data-model/business-dataset.model';
import { EntityRepositoryFactory } from './entity-repository.factory';
import { Department } from './data-model/department.model';
import { Skill } from './data-model/skill.model';
import { Employee } from './data-model/employee.model';
import { EmployeeExpirience } from './data-model/employee-expirience.model';
import { MyHttpClient } from './my-http-client.service';
export class ApplicationDbContext {
    constructor() {
        window['app'] = this;
        let $http = new MyHttpClient();
        let $entityRepositoryFactory = new EntityRepositoryFactory();
        this.skill = $entityRepositoryFactory.create('Skill', $http, function () { return new Skill(); });
        this.employee = $entityRepositoryFactory.create('Employee', $http, function () { return new Employee(); });
        this.employeeExpirience = $entityRepositoryFactory.create('EmployeeExpirience', $http, function () { return new EmployeeExpirience(); });
        this.department = $entityRepositoryFactory.create('Department', $http, function () { return new Department(); });
        this.clientConnection = $entityRepositoryFactory.create('ClientConnection', $http, function () { return new ClientConnection(); });
        this.fileCatalog = $entityRepositoryFactory.create('FileCatalog', $http, function () { return new FileCatalog(); });
        this.fileResource = $entityRepositoryFactory.create('FileResource', $http, function () { return new FileResource(); });
        this.cLRLibrary = $entityRepositoryFactory.create('CLRLibrary', $http, function () { return new CLRLibrary(); });
        this.account = $entityRepositoryFactory.create('Account', $http, function () { return new Account(); });
        this.calendar = $entityRepositoryFactory.create('Calendar', $http, function () { return new Calendar(); });
        this.group = $entityRepositoryFactory.create('Group', $http, function () { return new Group(); });
        this.loginFact = $entityRepositoryFactory.create('LoginFact', $http, function () { return new LoginFact(); });
        this.message = $entityRepositoryFactory.create('Message', $http, function () { return new Message(); });
        this.news = $entityRepositoryFactory.create('News', $http, function () { return new News(); });
        this.person = $entityRepositoryFactory.create('Person', $http, function () { return new Person(); });
        this.resource = $entityRepositoryFactory.create('Resource', $http, function () { return new Resource(); });
        this.role = $entityRepositoryFactory.create('Role', $http, function () { return new Role(); });
        this.settings = $entityRepositoryFactory.create('Settings', $http, function () { return new Settings(); });
        this.user = $entityRepositoryFactory.create('User', $http, function () { return new User(); });
        this.userGroups = $entityRepositoryFactory.create('UserGroups', $http, function () { return new UserGroups(); });
        this.webApp = $entityRepositoryFactory.create('WebApp', $http, function () { return new WebApp(); });
        this.businessDatasource = $entityRepositoryFactory.create('BusinessDatasource', $http, function () { return new BusinessDatasource(); });
        this.businessFunction = $entityRepositoryFactory.create('BusinessFunction', $http, function () { return new BusinessFunction(); });
        this.businessIndicator = $entityRepositoryFactory.create('BusinessIndicator', $http, function () { return new BusinessIndicator(); });
        this.businessLogic = $entityRepositoryFactory.create('BusinessLogic', $http, function () { return new BusinessLogic(); });
        this.businessProcess = $entityRepositoryFactory.create('BusinessProcess', $http, function () { return new BusinessProcess(); });
        this.businessReport = $entityRepositoryFactory.create('BusinessReport', $http, function () { return new BusinessReport(); });
        this.businessResource = $entityRepositoryFactory.create('BusinessResource', $http, function () { return new BusinessResource(); });
        this.groupMessage = $entityRepositoryFactory.create('GroupMessage', $http, function () { return new GroupMessage(); });
        this.messageAttribute = $entityRepositoryFactory.create('MessageAttribute', $http, function () { return new MessageAttribute(); });
        this.messageProperty = $entityRepositoryFactory.create('MessageProperty', $http, function () { return new MessageProperty(); });
        this.messageProtocol = $entityRepositoryFactory.create('MessageProtocol', $http, function () { return new MessageProtocol(); });
        this.validationModel = $entityRepositoryFactory.create('ValidationModel', $http, function () { return new ValidationModel(); });
        this.businessDataset = $entityRepositoryFactory.create('BusinessDataset', $http, function () { return new BusinessDataset(); });
    }
    init() {
    }
}
